{"version":3,"sources":["components/Filter/Filter.module.scss","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactLIst/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactLIst/ContactList.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","connect","dispatch","onSubmit","contactsAction","useState","setName","setNumber","handlerChange","e","value","currentTarget","className","s","form","preventDefault","label","input","type","pattern","title","required","onChange","autoComplete","button","allContacts","filterValue","items","filter","contacts","contact","toLocaleLowerCase","includes","contactsActions","list","map","item","onClick","filteredValue","App","createReducer","actions","state","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReduser","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f4b32bdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2mscg\",\"input\":\"Filter_input__GC4F8\"};","// import types from './contacts-types'\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n      payload: {\r\n        name,\r\n        number,\r\n        id: nanoid()\r\n    }\r\n}))\r\n\r\n// const addContact = (name, number) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         name,\r\n//         number,\r\n//         id: nanoid()\r\n//     }\r\n// });\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\n\r\n// const deleteContact = contactId => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n\r\nexport default {addContact, deleteContact,changeFilter}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from '../../redux/contacts/contacts-actions'\r\nimport { useState} from \"react\";\r\nimport s from './ContactForm.module.scss';\r\n\r\nfunction ContactForm({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n \r\n    const handlerChange = e => {\r\n        const { value } = e.currentTarget;\r\n        switch (e.currentTarget.name) {\r\n            case 'name': setName(value);\r\n                break\r\n            case 'number': setNumber(value);\r\n                break;\r\n            default: return;\r\n        }        \r\n    };\r\n\r\n   const  reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n    \r\n    const handlerSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        reset();\r\n    }\r\n        return (\r\n            <form className={s.form} onSubmit={handlerSubmit}>\r\n                <label className={s.label}>\r\n                    Name\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    Number\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <button type='submit' className={s.button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n//   const formSubmitHandler = ( name ) => {\r\n//     if (contacts.find(contact => contact.name === name)) {\r\n//       alert( name + 'is already in contacts' )\r\n//       return;\r\n//     }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n        onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number))\r\n    })\r\nexport default connect(null,mapDispatchToProps)(ContactForm);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.scss'\r\n\r\n\r\nfunction ContactList({contacts, deleteContact}) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(contact => <li className={s.item} key={contact.id}><span className={s.name}>{contact.name}</span>:<span className={s.number}>{contact.number}</span> \r\n            <button className={s.button} type='button' onClick={() => deleteContact(contact.id)}>Delete</button></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\n  const getFilteredContactList = (allContacts, filterValue) => {\r\n            return allContacts.filter(\r\n      contact => contact.name.toLocaleLowerCase()\r\n        .includes(filterValue.toLocaleLowerCase())\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = ({items, filter}) => ({\r\n    contacts: getFilteredContactList(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    deleteContact: (id) => dispatch(contactsActions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './Filter.module.scss'\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nfunction Filter({onChange}) {\r\n    const handlerChange = e => {\r\n        const filteredValue = e.currentTarget.value;\r\n        onChange(filteredValue);\r\n    }\r\n    return (\r\n        <label className={s.label}>\r\n            Find contact by name\r\n            <input className={s.input} type=\"text\" autoComplete=\"off\"\r\n                onChange={handlerChange} />\r\n        </label>\r\n    )  \r\n}\r\n\r\nFilter.propTypes = {\r\n   handlerChange: PropTypes.func\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    onChange: (filteredValue) => dispatch(contactsActions.changeFilter(filteredValue))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(Filter)","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactLIst\";\nimport Filter from \"./components/Filter\";\n\nfunction App () {\n    return (\n      <div className='container'>\n        <h1>PhoneBook</h1>\n        <ContactForm/>\n        <h1>Contacts</h1>\n        <Filter />\n        <ContactList />\n      </div>\n    ) \n  };\n\nexport default App;\n\n\n","import { combineReducers } from \"redux\";\r\n// import types from './contacts-types';\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, {payload}) => [...state, payload],\r\n    [actions.deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n})\r\n\r\n// const items = (state = [], {type,payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload]\r\n//         case types.DELETE:\r\n//             return state.filter(contact => contact.id !== payload)\r\n//         default: return state;\r\n//     }\r\n    \r\n// }\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filter]: (_, {payload}) => payload\r\n})\r\n\r\n// const filter = (state = '', {type,payload}) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload\r\n//         default: return state;\r\n//     }\r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})","// import { combineReducers, createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReduser from './contacts/contacts-reduser';\r\nimport { configureStore, getDefaultMiddleware,} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore, persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReduser,\r\n// })\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n}), logger];\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: persistReducer(persistConfig,contactsReduser) \r\n// })\r\n\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n    storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: persistReducer(contactsPersistConfig,contactsReduser), \r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development'\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n    <App />\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3GzvF\",\"button\":\"ContactForm_button__2OeM3\",\"input\":\"ContactForm_input__1UkYK\",\"label\":\"ContactForm_label__Z94Ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2V3JD\",\"item\":\"ContactList_item__fVpaN\",\"number\":\"ContactList_number__1RAqS\"};"],"sourceRoot":""}